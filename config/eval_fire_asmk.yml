experiment: null # Name of the experiment folder, if null, the yaml file name will be used

demo_eval:
  data_folder: fire_data # Data path relative to the package root (can be absolute path)
  exp_folder: fire_experiments # Experiment path relative to the package root (can be absolute path)
  gpu_id: 0 # Gpu id to perform inference on (asmk can have a different gpu id)
  net_path: "../model/fire_SfM_120k.pth" #http://download.europe.naverlabs.com/ComputerVision/FIRe/official/fire.pth # Model path (can be url or path relative to exp_folder)

evaluation:
  inference:
    image_size: 1024 # Images will be downscaled to this size prior processing with the network
    scales: [2.0, 1.414, 1.0, 0.707, 0.5, 0.353, 0.25] # Scales for multiscale inference
    features_num: 1000 # Number of local features to keep (sorted by attention)

  local_descriptor:
#    datasets: [val_eccv20, roxford5k, rparis6k] # Datasets for evaluation of local descriptor with asmk
    datasets: [roxford5k] # Datasets for evaluation of local descriptor with asmk
    # Codebook training options are distinct (image size is kept)
    codebook_training:
      images: 2000 # 20000 # Number of images for training (taken from beginning of dataset)
      scales: [1] # Scales for multiscale inference
    asmk:
      # Parameters for the asmk package
      index:
        gpu_id: 0 # Gpu id to use, None to run on cpu

      # Steps
      train_codebook:
        codebook:
          size: "64k" # Number of visual words (i.e. clusters of local features) in the codebook

      build_ivf:
        kernel:
          binary: True # Binarization option in the asmk
        ivf:
          use_idf: False # IDF weighting in the inverted file

        quantize:
          multiple_assignment: 1 # Number of assignments for the db vectors
        aggregate: {}

      query_ivf:
        quantize:
          multiple_assignment: 5 # Number of assignments for the query vectors
        aggregate: {}
        search:
          topk: null # Limit the number of results (db images) returned for each query (null means unlimited)
        similarity:
          similarity_threshold: 0.0 # Feature similarity threshold
          alpha: 3.0 # Feature similarity exponent